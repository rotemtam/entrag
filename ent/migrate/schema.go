// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChunksColumns holds the columns for the "chunks" table.
	ChunksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "path", Type: field.TypeString},
		{Name: "nchunk", Type: field.TypeInt},
		{Name: "data", Type: field.TypeString, Size: 2147483647},
	}
	// ChunksTable holds the schema information for the "chunks" table.
	ChunksTable = &schema.Table{
		Name:       "chunks",
		Columns:    ChunksColumns,
		PrimaryKey: []*schema.Column{ChunksColumns[0]},
	}
	// EmbeddingsColumns holds the columns for the "embeddings" table.
	EmbeddingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "embedding", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "vector(1536)"}},
		{Name: "chunk_id", Type: field.TypeInt, Unique: true},
	}
	// EmbeddingsTable holds the schema information for the "embeddings" table.
	EmbeddingsTable = &schema.Table{
		Name:       "embeddings",
		Columns:    EmbeddingsColumns,
		PrimaryKey: []*schema.Column{EmbeddingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "embeddings_chunks_embedding",
				Columns:    []*schema.Column{EmbeddingsColumns[2]},
				RefColumns: []*schema.Column{ChunksColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChunksTable,
		EmbeddingsTable,
	}
)

func init() {
	EmbeddingsTable.ForeignKeys[0].RefTable = ChunksTable
}
